# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CommunesScreen.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from qgis.gui import *
import os.path
from qgis.utils import iface
from PyQt5.QtWidgets import QDialog, QApplication
from PyQt5.uic import loadUi
from typing import ValuesView
import os # This is is needed in the pyqgis console also
from qgis.PyQt.QtCore import QSettings, QTranslator, QCoreApplication 
from qgis.PyQt.QtGui import QColor, QIcon , QFont, QPixmap 
from qgis.PyQt.QtWidgets import QAction, QFileDialog, QLineEdit
from qgis.core import *
from qgis.gui import (
    QgsMessageBar,
    QgsOptionsWidgetFactory,
    QgsOptionsPageWidget,
    QgsColorButton,

)
from qgis.PyQt.QtWidgets import (
    QAction,
    QFileDialog,
    QLineEdit,
    QSizePolicy,
    QPushButton,
    QDialog,
    QGridLayout,
    QDialogButtonBox,
)

from qgis.core import (
  QgsVectorDataProvider,
  QgsVectorLayer,
)

import os.path


class Communes(QDialog):
    ######### Les attributs de la classe Provinces: ##########

    filename= "C:/Users/DELL/Documents/Master/Python/ProjectQGIS/DataProject/Goessc/communes_tta.geojson"
    layer = QgsVectorLayer(filename, "", "ogr")
    nbr= layer.featureCount()
    headers = ["CODE_COM", "NOM",  "STATUT","ID_PROVINC","ID_REGION","SHAPE_AREA","SHAPE_LEN"]
    ######### Les methodes de la classe Provinces: ##########

    ###### Le constructeur: ##############
    def __init__(self):
        super(Communes, self).__init__()
        loadUi("C:/Users/DELL/AppData/Roaming/QGIS/QGIS3/profiles/default/python/plugins/pyqgis/CommunesScreen.ui",self)
        self.pushButton_1.clicked.connect(self.LoadData)
        self.pushButton_2.clicked.connect(self.FiltrerData)
    ###################################################


    ###################################################
    #####La fonction LoadData:
    def LoadData(self):
            
            vlayer = iface.activeLayer()
            iface.mapCanvas().setSelectionColor(QColor('yellow'))
            vlayer.selectAll()
            self.tableWidget.setColumnCount(7)
            self.tableWidget.setRowCount(self.nbr)
            row=0
            self.tableWidget.setHorizontalHeaderLabels(self.headers)
            for i in range(0,self.nbr):
                Feature= self.layer.getFeature(i)
                self.tableWidget.setItem(row,0,QtWidgets.QTableWidgetItem(str(Feature['CODE_COM'])))
                self.tableWidget.setItem(row,1,QtWidgets.QTableWidgetItem(Feature['NOM']))
                self.tableWidget.setItem(row,2,QtWidgets.QTableWidgetItem(Feature['STATUT']))
                self.tableWidget.setItem(row,3,QtWidgets.QTableWidgetItem(Feature['ID_PROVINC']))
                self.tableWidget.setItem(row,4,QtWidgets.QTableWidgetItem(Feature['ID_REGION']))
                self.tableWidget.setItem(row,5,QtWidgets.QTableWidgetItem(str(Feature['SHAPE_AREA'])))
                self.tableWidget.setItem(row,6,QtWidgets.QTableWidgetItem(str(Feature['SHAPE_LEN'])))
                row= row+1
    ###################################################
    #####La fonction FiltrerData:

    def FiltrerData(self):
        self.tableWidget.clearContents()
        vlayer = iface.activeLayer()
        commune= self.chercher.text()
        iface.mapCanvas().setSelectionColor(QColor('red'))
        vlayer.selectByExpression(" \"NOM\" ='{}' ".format(commune))
        selection = vlayer.selectedFeatures()
        for feature in selection:
            self.tableWidget.setItem(0,0,QtWidgets.QTableWidgetItem(str(feature['CODE_COM'])))
            self.tableWidget.setItem(0,1,QtWidgets.QTableWidgetItem(feature['NOM']))
            self.tableWidget.setItem(0,2,QtWidgets.QTableWidgetItem(feature['STATUT']))
            self.tableWidget.setItem(0,3,QtWidgets.QTableWidgetItem(feature['ID_PROVINC']))
            self.tableWidget.setItem(0,4,QtWidgets.QTableWidgetItem(feature['ID_REGION']))
            self.tableWidget.setItem(0,5,QtWidgets.QTableWidgetItem(str(feature['SHAPE_AREA'])))                                                                
            self.tableWidget.setItem(0,6,QtWidgets.QTableWidgetItem(str(feature['SHAPE_LEN'])))

        self.tableWidget.setRowCount(1)

    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(700, 460)
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(460, 0, 221, 191))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("Logo-conseil-tangerr.jpg"))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(180, 10, 241, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setTextFormat(QtCore.Qt.RichText)
        self.label_2.setObjectName("label_2")
        self.tableWidget = QtWidgets.QTableWidget(Dialog)
        self.tableWidget.setGeometry(QtCore.QRect(10, 190, 671, 251))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.pushButton_1 = QtWidgets.QPushButton(Dialog)
        self.pushButton_1.setGeometry(QtCore.QRect(20, 70, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_1.setFont(font)
        self.pushButton_1.setObjectName("pushButton_1")
        self.filtrer = QtWidgets.QLabel(Dialog)
        self.filtrer.setGeometry(QtCore.QRect(20, 110, 161, 16))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.filtrer.setFont(font)
        self.filtrer.setObjectName("filtrer")
        self.chercher = QtWidgets.QLineEdit(Dialog)
        self.chercher.setGeometry(QtCore.QRect(20, 140, 231, 31))
        self.chercher.setObjectName("chercher")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(260, 140, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label_2.setText(_translate("Dialog", "Les Communes de la Region"))
        self.pushButton_1.setText(_translate("Dialog", "Afficher tous les Communes"))
        self.filtrer.setText(_translate("Dialog", "Filtrer une province:"))
        self.pushButton_2.setText(_translate("Dialog", "Chercher"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Communes()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
